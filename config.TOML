
# for random seed, use 'missing'
seed = 1

# ["terminal", "gui"]
# "gui" not implemented yet
display = "terminal"


[data]

# EMNIST
# ["mnist", "balanced", "digits", "bymerge", "byclass", "letters"]
# "letters" is broken
name = "mnist"

# ["z_score", "demean", "identity"]
preprocessing_function = "z_score"

# must add to 100
split_percentages = [80, 20]


[epochs]

# ["squared_error"]
cost_function = "squared_error"

n = 100
batch_size = 10
shuffle_data = "true"


[model]

# ["Neural_Network"]
name = "Neural_Network"

# the last layer size ("missing") is determined by the dataset
sizes = [28, "missing"]

# [xavier, he]
# he is untested
weight_initialization_functions = ["xavier", "xavier"]

use_biases = [true, true]

# ["Float16", "Float32", "Float64"]
# not implemented yet
precision = "Float64"


[hyperparameters]

# [tanh, sigmoid, identity]
# identity is untested
activation_functions = ["tanh", "tanh"]

learn_rates = [0.01, 0.01]

# [z_score, demean, identity]
# not currently "plugged in"
normalization_functions = ["identity", "identity"]
